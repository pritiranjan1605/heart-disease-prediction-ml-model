# -*- coding: utf-8 -*-
"""heartprediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yNbmYVCJYb1NNVQwKMpQdkr8tve0e7JK

# **INSTALLING DEPENDENCIES**

---
"""

import pandas as pd
import numpy as np
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

"""# **READING DATAFRAME**

---


"""

dataframe = pd.read_csv('/content/heart.csv')

dataframe.head()

dataframe.tail()

"""checking for null values"""

dataframe.isnull().sum()

"""**getting stastical measures of data**

---


"""

dataframe.describe()

"""


*  0--->no disease
*  1--->heart disease

"""

dataframe['target'].value_counts()

"""# **SPLITING FEATURES AND TARGET**

---


"""

x = dataframe.drop(columns='target',axis=1)
y = dataframe['target']

print(x)

print(y)

"""# **SPLITING TRAIN AND TEST DATA**

---


"""

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,stratify=y,random_state=2)

x_test.shape

x_train.shape

y_train.shape

y_test.shape

"""# **MODEL TRAINING**

---


"""

model = LogisticRegression()

model.fit(x_train,y_train)

"""# **MODEL EVALUATION**

---


"""

# training data model evaluation
x_trainaccy = model.predict(x_train)
trainaccuracy = accuracy_score(x_trainaccy,y_train)
print("training data accuracy score is :-",trainaccuracy*100,"%")

# testing data model evaluation
x_testaccy = model.predict(x_test)
testaccuracy = accuracy_score(x_testaccy,y_test)
print("testing data accuracy score is",testaccuracy*100,"%")

"""# **BUILDING A PREDECTIVE SYSTEM**

---


"""

input = (52,1,0,125,212,0,1,168,0,1,2,2,3)
input_to_numpy = np.asarray(input)
reshape_input = input_to_numpy.reshape(1,-1)
predicted = model.predict(reshape_input)
print("disease detected") if predicted[0] == 1 else print("no disease detected")

